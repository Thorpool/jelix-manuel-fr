~~LANG:EN@enman:views/view-sitemap~~

jResponseSitemap permet de générer un [[https://www.sitemaps.org/|sitemap]] (utilisé
par les moteurs de recherche, entre autres Google).

===== Téléchargement et installation =====

Depuis Jelix 1.7, la classe jResponseSitemap et ses dépendances sont dans
un module séparé, qu'il faut télécharger et installer, soit sous forme
de zip sur le site de téléchargement de Jelix, soit installable via Composer :
[[https://packagist.org/packages/jelix/sitemap-module|paquet jelix/sitemap-module]].

<code bash>
composer require "jelix/sitemap-module"
</code>

Déclarez ensuite le module dans la configuration de l'application :

<code ini>
[modules]
jsitemap.access=1
</code>

Ensuite lancez l'installation :

<code bash>
php yourapp/cmd.php install
</code>

===== Utilisation dans un contrôleur =====

Récupération de la réponse dans le controller :

<code php>
$rep = $this->getResponse('sitemap');
</code>

Vous avez alors dans $rep une instance de l'objet @@C@jResponseSitemap@@.

===== Restrictions d'un sitemap =====

  * Un fichier sitemap ne peut contenir que 50 000 urls.
  * Un fichier index de sitemap ne peut contenir que 1000 fichiers sitemap, ce
    qui donne quand même un total 50 000 000 urls !

===== Génération manuelle =====

La création d'un sitemap se fait par l'ajout de chacune des urls que vous voulez
voir afficher dans le fichier :

<code php>
$rep->addUrl($loc, $lastmod, $changefreq, $priority);
</code>

  * @@V@$loc@@ : URL de la page
  * @@V@$lastmod@@ : Date de dernière modification de la page, au format Y-m-d 
  * @@V@$changefreq@@ : Fréquence probable de modification de la page
    (uniquement les valeurs : always, hourly, daily, weekly, monthly, yearly,
    never)
  * @@V@$priorit@@y : Priorité de cette URL par rapport aux autres URL de votre
    site
  
Seul le paramètre @@V@$loc@@ est obligatoire.

Exemple :

<code php>
$rep->addUrl(jUrl::get('module~home:index'));
$rep->addUrl(jUrl::get('module~contact:index'), null, 'weekly', 1);
</code>

===== Génération automatique à partir de urls.xml =====

L'automatisation (partielle) du sitemap est possible à partir des urls fournies
dans le fichier @@var/config/urls.xml@@.

Une fois la réponse instanciée, il suffit d'appeler une seule méthode :

<code php>
$rep->importFromUrlsXml();
return $rep;
</code>

Notez que cela importe uniquement les urls des actions individuelles, et parmi
celles-ci, uniquement celle qui n'ont pas un pathinfo dynamique.

===== Génération d'un index de sitemap =====

Si vous avez vraiment un très gros site et qu'un seul fichier sitemap ne suffit
pas, vous pouvez en créer plusieurs via les 2 méthodes ci-dessus et ensuite les
lier dans un index de sitemap :

<code php>
$rep->addSitemap($loc, $lastmod);
</code>

  * @@V@$loc@@ : URL d'un sitemap
  * @@V@$lastmod@@ : Date de dernière modification de la page, au format Y-m-d
Seul le paramètre @@V@$loc@@ est obligatoire.


Ainsi, vous écrivez plusieurs actions qui génèrent un sitemap, et une autre action
qui va générer l'index. Pour donner l'url des sitemaps à @@M@addSitemap@@, vous
pouvez utiliser @@jUrl::get()@@.

<code php>
$rep->addSitemap(jUrl::get('mymodule~sitemap:s1');
$rep->addSitemap(jUrl::get('mymodule~sitemap:s2');
$rep->addSitemap(jUrl::get('mymodule~sitemap:s3');
$rep->addSitemap(jUrl::get('mymodule~sitemap:s4');
return $rep;
</code>

s1, s2, s3 et s4 sont des actions  qui génèrent des sitemaps.

===== Avertir les moteurs de recherche =====

Pour donner l'adresse de votre sitemap aux moteurs de recherche, il y a la
méthode manuelle qui consiste à aller sur chacun des moteurs de recherche et de
leur fournir l'URL de votre sitemap. Ou vous pouvez utiliser la méthode
@@M@ping()@@ :

<code php>
$sitemapurl = jUrl::get('mymodule~sitemap:index')
$url = 'http'. (empty($_SERVER['HTTPS']) ? '' : 's') .'://'. $_SERVER['HTTP_HOST'] . urlencode($sitemapurl);

// google
$rep->ping('http://www.google.com/webmasters/tools/ping?sitemap=' . $url);

// yahoo
$rep->ping('http://search.yahooapis.com/SiteExplorerService/V1/updateNotification?appid=YahooDemo&url=' . $url);

// Live
$rep->ping('http://webmaster.live.com/ping.aspx?siteMap='.$url);

// Ask
$rep->ping('http://submissions.ask.com/ping?sitemap=' . $url);
</code>
