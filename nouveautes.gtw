~~LANG:EN@enman:new-features~~

===== Principales nouveautés apportées par la version 1.7 =====

  * Intégration avec Composer :
    * La bibliothèque Jelix [[https://packagist.org/packages/jelix/jelix|est maintenant installable]] avec Composer
    * Des modules et plugins ont été externalisés et disponibles séparément via Composer. Certains restent
      toutefois inclus dans le paquet standard de Jelix.
    * Un projet basé sur Jelix peut-être crée avec le paquet [[https://packagist.org/packages/jelix/jelix-skeleton-app|jelix/jelix-skeleton-app]]
      installable via Composer
    * Les paramètres de configuration @@modulesPath@@ et @@pluginsPath@@ ne sont plus pris en charge, et remplacés par une nouvelle API à appeler
      dans le fichier @@application.init.php@@ : @@jApp::declareModulesDir()@@, @@jApp::declarePluginsDir()@@, @@jApp::declareModuleDir()@@.
      Il est aussi possible de déclarer les chemins de repertoire de modules et plugins, via le fichier composer.json de l'application
      et des paquets contenant des modules.

  * Dans les applications crées par createapp, le répertoire temp est maintenant par défaut
    dans le répertoire de l'application

  * nouvelle méthode @@M@jApp::version()@@
  * nouvel objet @@C@jFramework@@ permettant d'accéder à des informations sur le framework
    (version...)
  * Jelix-scripts createapp: nouvelle option -modulename pour indiquer le nom du
    module principal
  * contrôleur CRUD : la liste des enregistrements peut être triée par colonne
  * jauthdb_admin : la liste des utilisateurs peut être filtrée et triée
  * jacl2db_admin : la liste des utilisateurs peut être filtrée

  * jIniFileModifier : il n'y a plus de ligne vide ajoutée à la fin du fichier à chaque sauvegarde
  * @@jFile::getMimeTypeFromFilename()@@ : support d'une liste de type mime définie par le développeur, dans
    une section @@[mimeTypes]@@ de la configuration.
  * Nouvelles méthodes : @@jFile::shortestPath()@@ et @@jFile::normalizePath()@@.
  * jProfiles :
     * le contenu du fichier profiles.ini.php est optimisé et stocké en cache
     * est extensible par des plugins : ceux-ci peuvent traiter les profiles qu'ils prennent en charge
       avant la mise en cache du fichier profiles.ini.php. (plugin : @@profiles/<type>/<type>.profiles.php@@
       classe: @@<type>ProfilesCompiler@@).
     * un plugin pour jdb est fourni, permettant à jDb de traiter plus rapidement l'ouverture d'une
       connexion.

===== Les modules et plugins externalisés =====

À l'instar du module jtcpdf dans les versions précédentes, des modules et plugins ne sont
plus fournis avec Jelix, mais disponibles séparément, en tant que paquets Composer et archives
téléchargeables classiquement.

Voici la liste de ces modules et plugins :

  * Le module jtcpdf : [[https://packagist.org/packages/jelix/tcpdf-module|jelix/tcpdf-module]].
  * Le plugin Minify pour les réponses HTML (maintenant dans un module) : [[https://packagist.org/packages/jelix/minify-module|jelix/minify-module]].
  * Le plugin redis pour jKVDb  : [[https://packagist.org/packages/jelix/php-redis-plugin|jelix/php-redis-plugin]].
  * Le module jsitemap : [[https://packagist.org/packages/jelix/sitemap-module|jelix/sitemap-module]], contenant
    l'objet réponse pour générer un sitemap.
  * [[https://packagist.org/packages/jelix/diff-plugin|Le plugin diff pour jTpl]]


À noter que d'autres composants, modules et plugins sont aussi maintenant chacun dans
leurs propres dépôts même si ils sont fournis avec Jelix. Il s'agit de :

  * [[https://packagist.org/packages/jelix/fakeserverconf|FakeServerConf]]
  * [[https://packagist.org/packages/jelix/soap-server-module|le module jSoap]]
  * [[https://packagist.org/packages/jelix/feeds-module|un nouveau module jFeeds]] comportant les classes
    et réponse pour générer des fils RSS et ATOM
  * [[https://packagist.org/packages/jelix/castor|la version standalone de jTpl, Castor]]
  * [[https://packagist.org/packages/jelix/inifile|IniModifier et MultiIniModifier]], classes de
    modification de fichiers ini (anciennement jIniFileModifier et jIniMultiFilesModifier)
  * [[https://packagist.org/packages/jelix/wikirenderer-plugin|La class jWiki et WikiRenderer]]

===== Les modules, plugins et fonctionnalités dépréciés =====

  * Le module junittests et Simpletests ont été supprimé. Ils sont disponibles
    séparement pour ceux qui n'auraient pas encore migré leur tests vers PHPUnit.
  * idem pour les plugins mysql et sqlite : en effet, les API PHP qu'ils utilisent sont dépréciées
    dans PHP. Ils sont disponibles séparément. Il est toutefois préférable d'utiliser
    respectivement les plugins mysqli et sqlite3, toujours disponibles dans la
    distribution standard.
  * il n'y a plus les fichiers de locales en_EN. configurez plutôt votre application pour utiliser
    en_US ou en_GB.
  * le plugin memcache22 pour jCache a été supprimé
  * La méthode @@jInstallerBase::declarePluginsPath()@@ a été supprimé.
  * la classe jHttp est dépréciée et installable séparément.
  * les classes jIniFile, jIniFileModifier, jIniMultiFilesModifier ont changés de nom en
    respectivement Jelix\IniFile\Util, Jelix\IniFile\IniModifier, Jelix\IniFile\MultiIniModifier.
    Mais il est encore possible d'utiliser les anciens noms (jusqu'à la prochaine version).
  * les quelques fichiers de la bibliothèque clearbricks ont été retirés

===== Pour les contributeurs =====

  * La configuration Vagrant pour les contributeurs est maintenant située dans testapp
  * Il n'y a plus besoin de faire un "build" des sources de Jelix pour contribuer à Jelix
    et lancer les tests.
  * FakeServerConf, Minify, PHPMailer sont maintenant installés via Composer
  * Dans testapp, une application "adminapp" est disponible pour tester les modules d'admin.

===== Contributeurs à Jelix 1.7 =====

Liste à établir...
