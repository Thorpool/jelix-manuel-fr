~~LANG:EN@enman:application-configuration~~

===== Configuration de PHP =====

La version minimal de PHP supportée par Jelix est la version 5.6.

===== Configuration du serveur =====

Voici ce qu'il faut configurer au niveau du serveur.

Note : À chaque fois que vous modifiez la configuration du serveur web pour
votre site, il faut supprimer les fichiers temporaires de jelix (dans
@@F@myapp/temp/@@ etc par ex), afin que Jelix prenne en compte la nouvelle
configuration.

Exemple :
<code bash>
sudo rm -rf myapp/temp/*
</code>


Note : Il n'est pas indiqué ici comment configurer PHP dans le serveur
web. Voyez la documentation de PHP pour cela.

==== Si vous pouvez spécifier le document root ====

Si vous pouvez spécifier la racine du site en modifiant les fichiers de
configuration du serveur web ou via une interface d'administration comme le
proposent certains hébergeurs, indiquez alors le répertoire @@F@myapp/www/@@
comme étant la racine du site.

Par exemple, avec apache, vous indiquerez dans un fichier @@F@monsite.com.conf@@,
quelque chose comme :

<code htaccess>
   <VirtualHost *>
      ServerName www.monsite.com
      DocumentRoot /home/monsite/myapp/www/ 
      <Directory "/home/monsite/myapp/www/">
        AllowOverride None
        Order allow,deny
        Allow from all
      </Directory>
   </VirtualHost>
</code>

Vous devez indiquer aussi un alias vers le répertoire @@F@lib/jelix-www/@@, en
le nommant jelix :

<code htaccess>
   <VirtualHost *>
      ServerName www.monsite.com
      DocumentRoot /home/monsite/myapp/www/ 
      Alias /jelix/ "/home/monsite/lib/jelix-www/"
      # ou avec Composer: Alias /jelix/ "/home/monsite/myapp/vendor/jelix/jelix/lib/jelix-www/"

      <Directory "/home/monsite/myapp/www/">
        AllowOverride None
        Order allow,deny
        Allow from all
      </Directory>
   
      <Directory "/home/monsite/lib/jelix-www/">
      # ou avec Composer: <Directory "/home/monsite/myapp/vendor/jelix/jelix/lib/jelix-www/">
        AllowOverride None
        Order allow,deny
        Allow from all
      </Directory>
   </VirtualHost>
</code>

Note : vous pouvez indiquer un autre nom que "jelix" pour l'alias. Vous devez
alors l'indiquer dans l'option @@V@jelixWWWPath@@ dans le fichier de
configuration de l'application @@F@myapp/var/config/mainconfig.ini.php@@,
section @@urlengine@@.

Et enfin dans ce même fichier vous ajusterez l'option @@V@basePath@@, en
indiquant le chemin jusqu'au index.php (ici donc, /) s:

<code ini> basePath="/"</code>

Vous pouvez laisser cette option vide, Jelix la devinera tout seul, sauf pour
des applications dans lesquelles vous avez plusieurs points d'entrée dans des
répertoires différents.

Ainsi, en tapant http://www.monsite.com vous accédez à votre site, et
http://www.monsite.com/jelix/, à @@F@jelix-www/@@, qui contient un certain
nombre de scripts javascript utiles etc..


==== Si vous ne pouvez pas spécifier le document root ====

Dans ce cas, il est préférable de déplacer le contenu du répertoire
@@F@monsite/myapp/www@@ à la racine de votre site, @@F@monsite/@@. Vous devriez
donc obtenir une arborescence comme ceci :

<code>
  monsite/  
    myapp/
    lib/
    index.php
</code>

Ici dans notre exemple, @@F@index.php@@ est un point d'entrée jelix de
l'application. Il faut le modifier pour changer les chemins relatifs qu'il
contient, et faire de même pour le fichier @@F@myapp/application.init.php@@. Par
exemple, après modification, le fichier @@F@index.php@@ devrait ressembler à
ceci dans notre exemple :

<code php>
require_once ('myapp/application.init.php');

require_once (JELIX_LIB_CORE_PATH.'request/jClassicRequest.class.php');
$config_file = 'index/config.ini.php';
$jelix = new jCoordinator($config_file);
$jelix->process(new jClassicRequest());
</code>


Il faut ensuite déplacer le répertoire @@F@lib/jelix-www/@@ à la racine et le
renommer en "jelix". Vous obtiendrez :

  monsite/  
    myapp/
    jelix/
    lib/
    index.php

Note : vous pouvez indiquer un autre nom que "jelix" pour ce renommage. Vous
devez alors l'indiquer dans l'option @@V@jelixWWWPath@@ dans le fichier de
configuration de l'application, @@F@myapp/var/config/mainconfig.ini.php@@,
section @@urlengine@@.

**Attention : il est fortement recommandé de ne pas mettre vos propres scripts
et css dans ce répertoire jelix copié.** Sinon les futures mises à jour risquent
d'être plus compliquées, et vos successeurs ou collègues risquent d'être un peu
perdu, en ne sachant pas ce qui vient de jelix et ce qui vient de votre appli.
Bref, ne touchez pas au contenu de jelix-www ou du répertoire qui est la copie
de jelix-www. Mettez vos propres scripts dans un autre répertoire, par exemple
dans @@F@monsite/js/@@.

Dans le fichier @@F@myapp/application.init.php@@, vous devez modifier le chemin
indiqué à @@C@jApp@@ pour le répertoire www (deuxième argument) :

<code php>
jApp::initPaths(
    $appPath
    $appPath.'../',
    //$appPath.'var/',
    //$appPath.'var/log/',
    //$appPath.'var/config/',
    //$appPath.'scripts/'
);
</code>

Vous pouvez alors taper l'adresse de votre site (http://www.monsite.com par
exemple, ou http://localhost/)

==== Configuration pour les urls ====

Jelix nécessite de pouvoir indiquer une partie "pathinfo" dans l'url, c'est à dire
un chemin après le index.php.

Il faut donc activer dans votre serveur web la prise en charge du pathinfo.
Dans apache (au niveau de la configuration serveur ou dans le
@@F@.htaccess@@ si cela est permis) :

<code htaccess>
   Options +Multiviews
   AcceptPathInfo on
</code>

Pour vérifier que cela fonctionne, créez sur votre site web un fichier
@@F@test.php@@ qui affiche @@f@phpinfo()@@ et essayez l'url :
@@monsite.com/test/foo/bar@@ . Le phpinfo devrait s'afficher, et vous devriez
avoir dans @@V@$_SERVER['PATH_INFO']@@ la chaine "/foo/bar".


===== Droits sur les répertoires =====

Vous devez donner le droit en écriture à l'utilisateur exécutant votre serveur
web (apache ou autre) au moins sur le répertoire @@F@myapp/var/log/@@, ainsi que
le répertoire @@F@myapp/temp/@@.

Exemple, sur un serveur debian/ubuntu :

<code bash>
   sudo chown www-data:www-data myapp/temp/  myapp/var/log
   sudo chmod g+w myapp/temp myapp/var/log
</code>

Peut être que pour certaines applications, il y a d'autres répertoires à
configurer de la sorte dans @@F@myapp/var/@@. Renseignez-vous dans la procédure
d'installation spécifique à cette application si il y en a une.
